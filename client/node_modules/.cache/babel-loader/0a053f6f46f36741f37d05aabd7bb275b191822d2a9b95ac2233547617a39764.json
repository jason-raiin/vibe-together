{"ast":null,"code":"import axios from 'axios';\nimport { CLIENT_ID, CLIENT_SECRET } from './constants';\nexport const authString = Buffer.from(`${CLIENT_ID}:${CLIENT_SECRET}`).toString('base64');\nexport let accessToken = '';\nexport class SpotifyService {\n  async getAccessToken() {\n    try {\n      const response = await axios.post('https://accounts.spotify.com/api/token', 'grant_type=client_credentials', {\n        headers: {\n          Authorization: `Basic ${authString}`,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      accessToken = response.data.access_token;\n    } catch (error) {\n      console.error('Failed to get access token:');\n    }\n  }\n  async getUserProfile(userId) {\n    try {\n      const url = `https://api.spotify.com/v1/users/${userId}/top/artists`;\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      console.log('User Profile:', response.data);\n    } catch (error) {\n      console.error('Failed to get user profile:');\n    }\n  }\n}","map":{"version":3,"names":["axios","CLIENT_ID","CLIENT_SECRET","authString","Buffer","from","toString","accessToken","SpotifyService","getAccessToken","response","post","headers","Authorization","data","access_token","error","console","getUserProfile","userId","url","get","log"],"sources":["/Users/jasonhuang/Documents/vibe-together/src/spotify/spotify.service.ts"],"sourcesContent":["import axios from 'axios';\nimport { CLIENT_ID, CLIENT_SECRET } from './constants';\n\nexport const authString = Buffer.from(`${CLIENT_ID}:${CLIENT_SECRET}`).toString(\n  'base64',\n);\nexport let accessToken = '';\n\nexport class SpotifyService {\n  async getAccessToken() {\n    try {\n      const response = await axios.post(\n        'https://accounts.spotify.com/api/token',\n        'grant_type=client_credentials',\n        {\n          headers: {\n            Authorization: `Basic ${authString}`,\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        },\n      );\n\n      accessToken = response.data.access_token;\n    } catch (error) {\n      console.error('Failed to get access token:');\n    }\n  }\n\n  async getUserProfile(userId: string) {\n    try {\n      const url = `https://api.spotify.com/v1/users/${userId}/top/artists`;\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      console.log('User Profile:', response.data);\n    } catch (error) {\n      console.error('Failed to get user profile:');\n    }\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,aAAa,QAAQ,aAAa;AAEtD,OAAO,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAE,GAAEJ,SAAU,IAAGC,aAAc,EAAC,CAAC,CAACI,QAAQ,CAC7E,QACF,CAAC;AACD,OAAO,IAAIC,WAAW,GAAG,EAAE;AAE3B,OAAO,MAAMC,cAAc,CAAC;EAC1B,MAAMC,cAAcA,CAAA,EAAG;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC/B,wCAAwC,EACxC,+BAA+B,EAC/B;QACEC,OAAO,EAAE;UACPC,aAAa,EAAG,SAAQV,UAAW,EAAC;UACpC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAEDI,WAAW,GAAGG,QAAQ,CAACI,IAAI,CAACC,YAAY;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF;EAEA,MAAME,cAAcA,CAACC,MAAc,EAAE;IACnC,IAAI;MACF,MAAMC,GAAG,GAAI,oCAAmCD,MAAO,cAAa;MACpE,MAAMT,QAAQ,GAAG,MAAMV,KAAK,CAACqB,GAAG,CAACD,GAAG,EAAE;QACpCR,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,WAAY;QACvC;MACF,CAAC,CAAC;MAEFU,OAAO,CAACK,GAAG,CAAC,eAAe,EAAEZ,QAAQ,CAACI,IAAI,CAAC;IAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}