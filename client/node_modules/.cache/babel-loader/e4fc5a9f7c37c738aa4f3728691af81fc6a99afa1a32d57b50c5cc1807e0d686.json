{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_URL, REDIRECT_URI } from './constants';\nexport let accessToken = '';\nexport class SpotifyService {\n  async getLoginUrl() {\n    const CLIENT_ID = process.env['CLIENT_ID'];\n    const LOGIN_URL_PARAMS = `${LOGIN_URL}?client_id=${CLIENT_ID}&response_type=code&redirect_uri=${REDIRECT_URI}&scope=user-top-read`;\n    return LOGIN_URL_PARAMS;\n  }\n  async getAccessToken() {\n    try {\n      const CLIENT_ID = process.env['CLIENT_ID'];\n      const CLIENT_SECRET = process.env['CLIENT_SECRET'];\n      const authString = Buffer.from(`${CLIENT_ID}:${CLIENT_SECRET}`).toString('base64');\n      const response = await axios.post('https://accounts.spotify.com/api/token', 'grant_type=client_credentials', {\n        headers: {\n          Authorization: `Basic ${authString}`,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      accessToken = response.data.access_token;\n    } catch (error) {\n      console.error('Failed to get access token:');\n    }\n  }\n  async getUserProfile(userId) {\n    try {\n      const url = `https://api.spotify.com/v1/users/${userId}/top/artists`;\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      console.log('User Profile:', response.data);\n    } catch (error) {\n      console.error('Failed to get user profile:');\n    }\n  }\n}","map":{"version":3,"names":["axios","LOGIN_URL","REDIRECT_URI","accessToken","SpotifyService","getLoginUrl","CLIENT_ID","process","env","LOGIN_URL_PARAMS","getAccessToken","CLIENT_SECRET","authString","Buffer","from","toString","response","post","headers","Authorization","data","access_token","error","console","getUserProfile","userId","url","get","log"],"sources":["/Users/jasonhuang/Documents/vibe-together/src/spotify/spotify.service.ts"],"sourcesContent":["import axios from 'axios';\nimport { LOGIN_URL, REDIRECT_URI } from './constants';\n\nexport let accessToken = '';\n\nexport class SpotifyService {\n  async getLoginUrl() {\n    const CLIENT_ID = process.env['CLIENT_ID'];\n    const LOGIN_URL_PARAMS = `${LOGIN_URL}?client_id=${CLIENT_ID}&response_type=code&redirect_uri=${REDIRECT_URI}&scope=user-top-read`;\n    return LOGIN_URL_PARAMS;\n  }\n  async getAccessToken() {\n    try {\n      const CLIENT_ID = process.env['CLIENT_ID'];\n      const CLIENT_SECRET = process.env['CLIENT_SECRET'];\n      const authString = Buffer.from(`${CLIENT_ID}:${CLIENT_SECRET}`).toString(\n        'base64',\n      );\n      const response = await axios.post(\n        'https://accounts.spotify.com/api/token',\n        'grant_type=client_credentials',\n        {\n          headers: {\n            Authorization: `Basic ${authString}`,\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        },\n      );\n\n      accessToken = response.data.access_token;\n    } catch (error) {\n      console.error('Failed to get access token:');\n    }\n  }\n\n  async getUserProfile(userId: string) {\n    try {\n      const url = `https://api.spotify.com/v1/users/${userId}/top/artists`;\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      console.log('User Profile:', response.data);\n    } catch (error) {\n      console.error('Failed to get user profile:');\n    }\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,YAAY,QAAQ,aAAa;AAErD,OAAO,IAAIC,WAAW,GAAG,EAAE;AAE3B,OAAO,MAAMC,cAAc,CAAC;EAC1B,MAAMC,WAAWA,CAAA,EAAG;IAClB,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,MAAMC,gBAAgB,GAAI,GAAER,SAAU,cAAaK,SAAU,oCAAmCJ,YAAa,sBAAqB;IAClI,OAAOO,gBAAgB;EACzB;EACA,MAAMC,cAAcA,CAAA,EAAG;IACrB,IAAI;MACF,MAAMJ,SAAS,GAAGC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAC1C,MAAMG,aAAa,GAAGJ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAClD,MAAMI,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAE,GAAER,SAAU,IAAGK,aAAc,EAAC,CAAC,CAACI,QAAQ,CACtE,QACF,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC/B,wCAAwC,EACxC,+BAA+B,EAC/B;QACEC,OAAO,EAAE;UACPC,aAAa,EAAG,SAAQP,UAAW,EAAC;UACpC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAEDT,WAAW,GAAGa,QAAQ,CAACI,IAAI,CAACC,YAAY;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF;EAEA,MAAME,cAAcA,CAACC,MAAc,EAAE;IACnC,IAAI;MACF,MAAMC,GAAG,GAAI,oCAAmCD,MAAO,cAAa;MACpE,MAAMT,QAAQ,GAAG,MAAMhB,KAAK,CAAC2B,GAAG,CAACD,GAAG,EAAE;QACpCR,OAAO,EAAE;UACPC,aAAa,EAAG,UAAShB,WAAY;QACvC;MACF,CAAC,CAAC;MAEFoB,OAAO,CAACK,GAAG,CAAC,eAAe,EAAEZ,QAAQ,CAACI,IAAI,CAAC;IAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}