{"ast":null,"code":"import axios from 'axios';\nimport { AUTH_STRING, REDIRECT_URI, TOKEN_URL } from './constants';\n\n//TODO: OOP-ify the functions\n//TODO: add functions to retrieve historical user data\n//TODO: implement database retrieval and addition methods\n//TODO: constant list could be expanded\n\nexport class SpotifyService {\n  async getAccessToken(code) {\n    console.log(AUTH_STRING);\n    try {\n      const payload = {\n        code: code,\n        redirect_uri: REDIRECT_URI,\n        grant_type: 'authorization_code'\n      };\n      const response = await axios.post(TOKEN_URL, payload, {\n        headers: {\n          Authorization: `Basic ${AUTH_STRING}`,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      const {\n        access_token,\n        refresh_token,\n        expires_in\n      } = response.data;\n      console.log('Access Token: ', access_token);\n      console.log('Refresh Token: ', refresh_token);\n      console.log('Expires In: ', expires_in);\n      return access_token;\n    } catch (error) {\n      console.error('Failed to get access token:');\n    }\n  }\n  async refreshAccessToken(refreshToken) {\n    try {\n      const payload = {\n        refresh_token: refreshToken,\n        grant_type: 'refresh_token'\n      };\n      const response = await axios.post(TOKEN_URL, payload, {\n        headers: {\n          Authorization: `Basic ${AUTH_STRING}`,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      const {\n        access_token,\n        refresh_token,\n        expires_in\n      } = response.data;\n      console.log('Access Token: ', access_token);\n      console.log('Refresh Token: ', refresh_token);\n      console.log('Expires In: ', expires_in);\n      return access_token;\n    } catch (error) {\n      console.error('Failed to refresh access token:');\n    }\n  }\n  async getUserProfile(accessToken) {\n    try {\n      console.log('Access Token: ', accessToken);\n      const url = `https://api.spotify.com/v1/me/top/artists`;\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      console.log('User Profile:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get user profile:');\n    }\n  }\n}","map":{"version":3,"names":["axios","AUTH_STRING","REDIRECT_URI","TOKEN_URL","SpotifyService","getAccessToken","code","console","log","payload","redirect_uri","grant_type","response","post","headers","Authorization","access_token","refresh_token","expires_in","data","error","refreshAccessToken","refreshToken","getUserProfile","accessToken","url","get"],"sources":["/Users/jasonhuang/Documents/vibe-together/src/spotify/spotify.service.ts"],"sourcesContent":["import axios from 'axios';\nimport { AUTH_STRING, REDIRECT_URI, TOKEN_URL } from './constants';\n\n//TODO: OOP-ify the functions\n//TODO: add functions to retrieve historical user data\n//TODO: implement database retrieval and addition methods\n//TODO: constant list could be expanded\n\nexport class SpotifyService {\n  async getAccessToken(code: string) {\n    console.log(AUTH_STRING);\n    try {\n      const payload = {\n        code: code,\n        redirect_uri: REDIRECT_URI,\n        grant_type: 'authorization_code',\n      };\n      const response = await axios.post(TOKEN_URL, payload, {\n        headers: {\n          Authorization: `Basic ${AUTH_STRING}`,\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      });\n\n      const { access_token, refresh_token, expires_in } = response.data;\n\n      console.log('Access Token: ', access_token);\n      console.log('Refresh Token: ', refresh_token);\n      console.log('Expires In: ', expires_in);\n\n      return access_token;\n    } catch (error) {\n      console.error('Failed to get access token:');\n    }\n  }\n\n  async refreshAccessToken(refreshToken: string) {\n    try {\n      const payload = {\n        refresh_token: refreshToken,\n        grant_type: 'refresh_token',\n      };\n      const response = await axios.post(TOKEN_URL, payload, {\n        headers: {\n          Authorization: `Basic ${AUTH_STRING}`,\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      });\n\n      const { access_token, refresh_token, expires_in } = response.data;\n\n      console.log('Access Token: ', access_token);\n      console.log('Refresh Token: ', refresh_token);\n      console.log('Expires In: ', expires_in);\n\n      return access_token;\n    } catch (error) {\n      console.error('Failed to refresh access token:');\n    }\n  }\n\n  async getUserProfile(accessToken: string) {\n    try {\n      console.log('Access Token: ', accessToken);\n      const url = `https://api.spotify.com/v1/me/top/artists`;\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      console.log('User Profile:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get user profile:');\n    }\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,YAAY,EAAEC,SAAS,QAAQ,aAAa;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,CAAC;EAC1B,MAAMC,cAAcA,CAACC,IAAY,EAAE;IACjCC,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;IACxB,IAAI;MACF,MAAMQ,OAAO,GAAG;QACdH,IAAI,EAAEA,IAAI;QACVI,YAAY,EAAER,YAAY;QAC1BS,UAAU,EAAE;MACd,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAACV,SAAS,EAAEM,OAAO,EAAE;QACpDK,OAAO,EAAE;UACPC,aAAa,EAAG,SAAQd,WAAY,EAAC;UACrC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,MAAM;QAAEe,YAAY;QAAEC,aAAa;QAAEC;MAAW,CAAC,GAAGN,QAAQ,CAACO,IAAI;MAEjEZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEQ,YAAY,CAAC;MAC3CT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAES,aAAa,CAAC;MAC7CV,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEU,UAAU,CAAC;MAEvC,OAAOF,YAAY;IACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF;EAEA,MAAMC,kBAAkBA,CAACC,YAAoB,EAAE;IAC7C,IAAI;MACF,MAAMb,OAAO,GAAG;QACdQ,aAAa,EAAEK,YAAY;QAC3BX,UAAU,EAAE;MACd,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAACV,SAAS,EAAEM,OAAO,EAAE;QACpDK,OAAO,EAAE;UACPC,aAAa,EAAG,SAAQd,WAAY,EAAC;UACrC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,MAAM;QAAEe,YAAY;QAAEC,aAAa;QAAEC;MAAW,CAAC,GAAGN,QAAQ,CAACO,IAAI;MAEjEZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEQ,YAAY,CAAC;MAC3CT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAES,aAAa,CAAC;MAC7CV,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEU,UAAU,CAAC;MAEvC,OAAOF,YAAY;IACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,iCAAiC,CAAC;IAClD;EACF;EAEA,MAAMG,cAAcA,CAACC,WAAmB,EAAE;IACxC,IAAI;MACFjB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEgB,WAAW,CAAC;MAC1C,MAAMC,GAAG,GAAI,2CAA0C;MACvD,MAAMb,QAAQ,GAAG,MAAMZ,KAAK,CAAC0B,GAAG,CAACD,GAAG,EAAE;QACpCX,OAAO,EAAE;UACPC,aAAa,EAAG,UAASS,WAAY;QACvC;MACF,CAAC,CAAC;MAEFjB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEI,QAAQ,CAACO,IAAI,CAAC;MAC3C,OAAOP,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}